{"version":3,"sources":["store/reducers/book-list/types.ts","store/reducers/book-list/book-list.ts","store/reducers/index.ts","store/store.ts","components/ui/error-indicator/index.ts","components/ui/error-indicator/error-indicator.tsx","components/ui/error-boundary/index.ts","components/ui/error-boundary/error-boundary.tsx","components/ui/book-list-item/book-list-item.tsx","components/ui/book-list-item/index.ts","utils/declination-of-numbers.ts","components/ui/found-books/found-books.tsx","components/ui/found-books/index.ts","components/ui/found-books/found-books-container.tsx","services/book-storage/index.ts","services/book-storage/book-storage.ts","context/book-storage/book-storage.tsx","context/book-storage/index.ts","components/hoc/with-book-storage.tsx","components/hoc/with-indicator.tsx","components/ui/spinner/spinner.tsx","components/ui/spinner/index.ts","components/ui/data-loader/data-loader.tsx","store/reducers/book-list/book-list-actions.ts","components/ui/data-loader/data-loader-container.tsx","components/ui/data-loader/index.ts","components/ui/book-list/book-list.tsx","hooks/useActions.ts","components/ui/book-list/index.ts","components/ui/book-list/book-list-container.tsx","components/ui/select/select.tsx","components/ui/book-search-settings/book-search-settings.tsx","components/ui/book-search-settings/book-search-settings-container.tsx","components/ui/book-search-settings/index.ts","components/pages/home-page.tsx","components/ui/book-detail/book-detail.tsx","components/ui/book-detail/index.ts","components/ui/book-detail/book-detail-container.tsx","components/pages/book-page.tsx","components/pages/about-page.tsx","components/ui/search-panel/search-panel.tsx","hooks/useTypedSelector.ts","components/ui/search-panel/index.ts","components/ui/search-panel/search-panel-container.tsx","components/ui/header/header.tsx","components/ui/app/index.ts","components/ui/app/app.tsx","index.tsx"],"names":["ActionTypes","FilterTypes","SortTypes","initialState","books","selectedBook","loading","error","query","filterType","ALL","sortType","RELEVANCE","filters","Object","keys","sorts","startIndex","requestedBooks","totalBooks","rootReducer","combineReducers","bookList","state","action","type","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","payload","FETCH_BOOKS_SUCCESS","FETCH_BOOKS_FAILURE","UPDATE_BOOKS","concat","FETCH_BOOK_SUCCESS","FETCH_BOOK_FAILURE","CHANGE_START_INDEX","CHANGE_REQUESTED_BOOKS_COUNT","CHANGE_TOTAL_BOOKS_COUNT","CHANGE_SEARCH_QUERY","trimStart","toLowerCase","CHANGE_SORT_TYPE","CHANGE_FILTER_TYPE","createStore","composeWithDevTools","applyMiddleware","thunk","ErrorIndicator","ErrorBoundary","hasError","errorInfo","this","setState","props","children","Component","CroppedText","text","maxLen","more","length","slice","BookListItem","book","changeQuery","selectBook","id","title","description","authors","imageLinks","onSelectBook","descriptionLabel","readMore","className","style","textDecoration","cursor","onClick","src","thumbnail","alt","e","target","innerText","searchByAuthor","join","declOfNum","n","textForms","n1","Math","abs","FoundBooks","memo","queryLabel","booksLabel","foundLabel","totalLabel","textTransform","prev","next","displayName","useSelector","useMemo","bookDeclination","findDeclination","BookStorage","_API_KEY","_BASE_URL","_totalBooks","_defaultQuery","_defaultParams","hl","printType","filter","key","data","volumeInfo","categories","publishedDate","pageCount","language","publisher","dimensions","params","q","category","maxResults","orderBy","url","axios","get","_createParams","response","console","log","booksParams","a","_getResource","totalItems","items","map","_transformToBook","bookId","bookStorage","BookStorageContext","React","createContext","withBookStorage","Wrapped","useContext","withIndicator","Loader","Error","Spinner","role","label","handler","dataRequested","dataLoaded","dataError","booksError","changeStartIndex","index","changeRequestedBooksCount","requestedCount","changeTotalBooksCount","totalCount","changeSort","changeFilter","changeSearchQuery","fetchBooks","dispatch","getState","mapStateToBooks","newBooks","updateBooks","booksCount","fetchBook","getBook","newBook","getBooks","DataLoaderContainer","compose","connect","args","BookList","useActions","actions","bookActions","useDispatch","bindActionCreators","withRouter","history","push","useEffect","Select","options","changeOption","value","htmlFor","onChange","option","charAt","BookSearchSettings","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","mapDispatchToProps","HomePage","languageLabel","replaceAll","categoryLabel","dateLabel","split","reverse","authorLabel","author","medium","BookDetail","useParams","BookPage","AboutPage","href","SearchPanel","useHistory","inputRef","useRef","current","focus","onSubmit","preventDefault","location","pathname","placeholder","ref","useTypedSelector","SearchPanelContainer","Header","to","aria-label","App","exact","path","component","ReactDOM","render","StrictMode","store","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.c18f2778.chunk.js","sourcesContent":["import { Book, BookStorageType } from '../../../services/book-storage/types';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { RootStateType } from '../index';\nimport { Dispatch } from 'redux';\n\nexport enum ActionTypes {\n  FETCH_DATA_REQUEST = 'FETCH_DATA_REQUEST',\n  FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS',\n  FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE',\n  FETCH_BOOKS_SUCCESS = 'FETCH_BOOKS_SUCCESS',\n  FETCH_BOOKS_FAILURE = 'FETCH_BOOKS_FAILURE',\n  FETCH_BOOK_SUCCESS = 'FETCH_BOOK_SUCCESS',\n  FETCH_BOOK_FAILURE = 'FETCH_BOOK_FAILURE',\n  UPDATE_BOOKS = 'UPDATE_BOOKS',\n  CHANGE_START_INDEX = 'CHANGE_START_INDEX',\n  CHANGE_REQUESTED_BOOKS_COUNT = 'CHANGE_REQUESTED_BOOKS_COUNT',\n  CHANGE_TOTAL_BOOKS_COUNT = 'CHANGE_TOTAL_BOOKS_COUNT',\n  CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY',\n  CHANGE_SORT_TYPE = 'CHANGE_SORT_TYPE',\n  CHANGE_FILTER_TYPE = 'CHANGE_FILTER_TYPE',\n}\n\nexport enum FilterTypes {\n  ALL = 'all',\n  ART = 'art',\n  BIOGRAPHY = 'biography',\n  COMPUTERS = 'computers',\n  HISTORY = 'history',\n  MEDICAL = 'medical',\n  POETRY = 'poetry',\n}\n\nexport enum SortTypes {\n  RELEVANCE = 'relevance',\n  NEWEST = 'newest',\n}\n\nexport type BookListStateType = {\n  loading: boolean;\n  error: string | null;\n  query: string;\n  filterType: FilterTypes;\n  sortType: SortTypes;\n  startIndex: number;\n  requestedBooks: number;\n  totalBooks: number;\n  selectedBook: Book | null;\n  books: Book[];\n  filters: string[];\n  sorts: string[];\n};\nexport type dataRequestedType = {\n  type: typeof ActionTypes.FETCH_DATA_REQUEST;\n};\nexport type dataLoadedType = {\n  type: typeof ActionTypes.FETCH_DATA_SUCCESS;\n};\nexport type dataErrorType = {\n  type: typeof ActionTypes.FETCH_DATA_FAILURE;\n  payload: string;\n};\nexport type booksLoadedType = {\n  type: typeof ActionTypes.FETCH_BOOKS_SUCCESS;\n  payload: Book[];\n};\nexport type booksErrorType = {\n  type: typeof ActionTypes.FETCH_BOOKS_FAILURE;\n};\nexport type bookLoadedType = {\n  type: typeof ActionTypes.FETCH_BOOK_SUCCESS;\n  payload: Book;\n};\nexport type bookErrorType = {\n  type: typeof ActionTypes.FETCH_BOOK_FAILURE;\n};\nexport type booksUpdatedType = {\n  type: typeof ActionTypes.UPDATE_BOOKS;\n  payload: Book[];\n};\nexport type changeStartIndexType = {\n  type: typeof ActionTypes.CHANGE_START_INDEX;\n  payload: number;\n};\nexport type changeRequestedBooksCountType = {\n  type: typeof ActionTypes.CHANGE_REQUESTED_BOOKS_COUNT;\n  payload: number;\n};\nexport type changeTotalBooksCountType = {\n  type: typeof ActionTypes.CHANGE_TOTAL_BOOKS_COUNT;\n  payload: number;\n};\nexport type changeSortType = {\n  type: typeof ActionTypes.CHANGE_SORT_TYPE;\n  payload: SortTypes;\n};\nexport type changeFilterType = {\n  type: typeof ActionTypes.CHANGE_FILTER_TYPE;\n  payload: FilterTypes;\n};\nexport type changeSearchQueryType = {\n  type: typeof ActionTypes.CHANGE_SEARCH_QUERY;\n  payload: string;\n};\n\nexport type ActionsType =\n  | dataRequestedType\n  | dataLoadedType\n  | dataErrorType\n  | booksLoadedType\n  | booksErrorType\n  | bookLoadedType\n  | bookErrorType\n  | booksUpdatedType\n  | changeStartIndexType\n  | changeRequestedBooksCountType\n  | changeTotalBooksCountType\n  | changeSortType\n  | changeFilterType\n  | changeSearchQueryType;\n\nexport interface OwnProps {\n  bookStorage: BookStorageType;\n  history?: any;\n}\n\nexport type ThunkType = ThunkAction<Promise<void>, RootStateType, unknown, ActionsType>;\nexport type DispatchThunkType = ThunkDispatch<RootStateType, unknown, ActionsType>;\nexport type DispatchType = Dispatch<ActionsType>;\n","import { ActionsType, ActionTypes, BookListStateType, FilterTypes, SortTypes } from './types';\n\nconst initialState = {\n  books: [],\n  selectedBook: null,\n  loading: false,\n  error: null,\n  query: '',\n  filterType: FilterTypes.ALL,\n  sortType: SortTypes.RELEVANCE,\n  filters: Object.keys(FilterTypes),\n  sorts: Object.keys(SortTypes),\n  startIndex: 0,\n  requestedBooks: 30,\n  totalBooks: 0,\n};\n\nconst bookList = (\n  state: BookListStateType = initialState,\n  action: ActionsType\n): BookListStateType => {\n  switch (action.type) {\n    case ActionTypes.FETCH_DATA_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case ActionTypes.FETCH_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    case ActionTypes.FETCH_DATA_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case ActionTypes.FETCH_BOOKS_SUCCESS:\n      return {\n        ...state,\n        books: action.payload,\n      };\n    case ActionTypes.FETCH_BOOKS_FAILURE:\n      return {\n        ...state,\n        books: [],\n      };\n    case ActionTypes.UPDATE_BOOKS:\n      return {\n        ...state,\n        books: state.books.concat(action.payload),\n      };\n    case ActionTypes.FETCH_BOOK_SUCCESS:\n      return {\n        ...state,\n        selectedBook: action.payload,\n      };\n    case ActionTypes.FETCH_BOOK_FAILURE:\n      return {\n        ...state,\n        selectedBook: null,\n      };\n    case ActionTypes.CHANGE_START_INDEX:\n      return {\n        ...state,\n        startIndex: action.payload,\n      };\n    case ActionTypes.CHANGE_REQUESTED_BOOKS_COUNT:\n      return {\n        ...state,\n        requestedBooks: action.payload,\n      };\n    case ActionTypes.CHANGE_TOTAL_BOOKS_COUNT:\n      return {\n        ...state,\n        totalBooks: action.payload,\n      };\n\n    case ActionTypes.CHANGE_SEARCH_QUERY:\n      return {\n        ...state,\n        query: action.payload.trimStart().toLowerCase(),\n      };\n    case ActionTypes.CHANGE_SORT_TYPE:\n      return {\n        ...state,\n        sortType: action.payload,\n      };\n    case ActionTypes.CHANGE_FILTER_TYPE:\n      return {\n        ...state,\n        filterType: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { bookList };\n","import { combineReducers } from 'redux';\nimport { bookList } from './book-list/book-list';\n\nconst rootReducer = combineReducers({\n  bookList,\n});\nexport type RootStateType = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","import ErrorIndicator from './error-indicator';\nexport default ErrorIndicator;\n","import { FC } from 'react';\n\nconst ErrorIndicator: FC = () => {\n  return <div>Error. OOPS something&apos;s wrong :(</div>;\n};\nexport default ErrorIndicator;\n","import ErrorBoundary from './error-boundary';\nexport default ErrorBoundary;\n","import { Component, ErrorInfo } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({ hasError: true });\n  }\n  render() {\n    return this.state.hasError ? <ErrorIndicator /> : this.props.children;\n  }\n}\n","import { FC, ReactNode } from 'react';\nimport { Book } from '../../../services/book-storage/types';\n\ntype BookListItemProps = {\n  book: Book;\n  changeQuery(query: string): void;\n  selectBook(id: string): void;\n};\n\nconst BookListItem: FC<BookListItemProps> = ({ book, changeQuery, selectBook }) => {\n  const { id, title, description, authors, imageLinks } = book;\n  const onSelectBook = () => selectBook(id);\n  // TODO e: MouseEvent<HTMLButtonElement>\n  const searchByAuthor = (e: any) => changeQuery(e.target.innerText);\n  const descriptionLabel = description || 'Описание отсутствует';\n  const readMore = (\n    <span\n      className=\"link-info ms-3\"\n      style={{ textDecoration: 'underline', cursor: 'pointer' }}\n      onClick={onSelectBook}\n    >\n      Read more\n    </span>\n  );\n\n  return (\n    <div className=\"d-flex flex-wrap justify-content-center flex-lg-column page-link border-0\">\n      <div className=\"flex-shrink-0 d-flex justify-content-center p-2\">\n        <img\n          style={{ cursor: 'pointer' }}\n          className=\"img-thumbnail\"\n          src={imageLinks.thumbnail}\n          alt={title}\n          onClick={onSelectBook}\n        />\n      </div>\n      <div className=\"flex-grow-1 d-flex justify-content-between flex-column p-2\">\n        <div className=\"mb-3\">\n          <div\n            style={{ cursor: 'pointer' }}\n            className=\"fs-5 link-info text-decoration-underline mb-2\"\n            onClick={onSelectBook}\n          >\n            <CroppedText text={title} maxLen={100} />\n          </div>\n          {authors ? (\n            <button className=\"btn btn-dark btn-sm\" onClick={(e) => searchByAuthor(e)}>\n              {authors.join()}\n            </button>\n          ) : (\n            <span>Нет автора</span>\n          )}\n        </div>\n        <p className=\"card-text\">\n          <CroppedText text={descriptionLabel} maxLen={150} more={readMore} />\n        </p>\n      </div>\n    </div>\n  );\n};\n\ntype CroppedTextProps = {\n  text: string;\n  maxLen: number;\n  more?: ReactNode;\n};\nconst CroppedText: FC<CroppedTextProps> = ({ text, maxLen, more }) => {\n  return text?.length > maxLen ? (\n    <>\n      {text.slice(0, maxLen) + ' ...'}\n      {more}\n    </>\n  ) : (\n    <>{text}</>\n  );\n};\n\nexport default BookListItem;\n","import BookListItem from './book-list-item';\nexport default BookListItem;\n","export default function declOfNum(n: number, textForms: string[]): string {\n  n = Math.abs(n) % 100;\n  const n1 = n % 10;\n  if (n > 10 && n < 20) {\n    return textForms[2];\n  }\n  if (n1 > 1 && n1 < 5) {\n    return textForms[1];\n  }\n  if (n1 === 1) {\n    return textForms[0];\n  }\n  return textForms[2];\n}\n","import { FC, memo } from 'react';\n\ntype FoundBooksProps = {\n  queryLabel: string;\n  booksLabel: string;\n  foundLabel: string;\n  totalLabel: number;\n};\nconst FoundBooks: FC<FoundBooksProps> = memo(\n  (props) => {\n    const { queryLabel, booksLabel, foundLabel, totalLabel } = props;\n    return (\n      <div className=\"d-flex justify-content-center flex-wrap mb-4 fs-5\">\n        {queryLabel === '' ? (\n          <>\n            <span style={{ textTransform: 'capitalize' }}>{foundLabel}</span>&nbsp;\n            <span className=\"text-info\">{totalLabel}</span>&nbsp;\n            {booksLabel}\n          </>\n        ) : (\n          <>\n            По запросу&nbsp;<span className=\"text-success\">&quot; {queryLabel} &quot;</span>&nbsp;\n            {foundLabel}&nbsp;\n            <span className=\"text-info\">{totalLabel}</span>&nbsp;\n            {booksLabel}\n          </>\n        )}\n      </div>\n    );\n  },\n  (prev, next) => prev.totalLabel === next.totalLabel\n);\nFoundBooks.displayName = 'FoundBooks';\n\nexport default FoundBooks;\n","import FoundBooks from './found-books-container';\nexport default FoundBooks;\n","import { declOfNum } from '../../../utils';\nimport FoundBooks from './found-books';\nimport { useSelector } from 'react-redux';\nimport { FC, useMemo } from 'react';\nimport { RootStateType } from '../../../store/reducers';\n\nconst FoundBooksContainer: FC = () => {\n  const { query, totalBooks } = useSelector(\n    ({ bookList: { query, totalBooks } }: RootStateType) => ({ query, totalBooks })\n  );\n  const [bookDeclination, findDeclination] = useMemo(() => {\n    return [\n      declOfNum(totalBooks, ['книга', 'книги', 'книг']),\n      declOfNum(totalBooks, ['найдена', 'найдено', 'найдено']),\n    ];\n  }, [totalBooks]);\n  return (\n    <FoundBooks\n      queryLabel={query}\n      booksLabel={bookDeclination}\n      foundLabel={findDeclination}\n      totalLabel={totalBooks}\n    />\n  );\n};\n\nexport default FoundBooksContainer;\n","import BookStorage from './book-storage';\nexport default BookStorage;\n","import axios from 'axios';\nimport { Book, BookResponse, BooksResponse, QueryStringParams } from './types';\n\nexport default class BookStorage {\n  private _API_KEY = 'AIzaSyAMf9konvBhoN-z4XY23JdJ80KrT1zZbv0';\n  private _BASE_URL = 'https://www.googleapis.com/books/v1/volumes';\n  private _totalBooks = 0;\n  private _defaultQuery = 'books';\n  private _defaultParams = {\n    hl: 'ru',\n    printType: 'books',\n    filter: 'partial',\n    key: this._API_KEY,\n  };\n  private _transformToBook(data: BookResponse): Book {\n    const {\n      title,\n      authors,\n      categories,\n      publishedDate,\n      imageLinks,\n      description,\n      pageCount,\n      language,\n      publisher,\n      dimensions,\n    } = data.volumeInfo;\n    return {\n      id: data.id,\n      title,\n      authors,\n      categories,\n      publishedDate,\n      imageLinks,\n      description,\n      pageCount,\n      language,\n      publisher,\n      dimensions,\n    };\n  }\n  private _createParams(params?: QueryStringParams) {\n    if (!params) {\n      return this._defaultParams;\n    }\n    return {\n      q: params.q === '' ? this._defaultQuery : `${params.q}+subject=${params.category}`,\n      startIndex: params.startIndex,\n      maxResults: params.maxResults,\n      orderBy: params.orderBy,\n      ...this._defaultParams,\n    };\n  }\n  private async _getResource(url: string, params?: QueryStringParams) {\n    try {\n      const response = await axios.get(`${this._BASE_URL}/${url}`, {\n        params: this._createParams(params),\n      });\n      return response.data;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async getBooks(booksParams: QueryStringParams): Promise<Book[]> {\n    const data: BooksResponse = await this._getResource('', booksParams);\n    this._totalBooks = data.totalItems;\n    return data.items.map((book: BookResponse) => this._transformToBook(book));\n  }\n  async getBook(bookId: string): Promise<Book> {\n    return this._transformToBook(await this._getResource(bookId));\n  }\n  get totalBooks(): number {\n    return this._totalBooks;\n  }\n}\n\n// export type BookStorageType = typeof BookStorage;\n","import React from 'react';\nimport BookStorage from '../../services/book-storage';\nimport { BookStorageType } from '../../services/book-storage/types';\n\nconst bookStorage = new BookStorage();\nconst BookStorageContext = React.createContext<BookStorageType>(bookStorage);\nexport default BookStorageContext;\n","import BookStorageContext from './book-storage';\nexport default BookStorageContext;\n","import BookStorageContext from '../../context/book-storage';\nimport { FC, useContext } from 'react';\n\nconst withBookStorage = () => (Wrapped: FC) => {\n  return (props: any) => {\n    return <Wrapped {...props} bookStorage={useContext(BookStorageContext)} />;\n  };\n};\nexport default withBookStorage;\n","import { FC } from 'react';\n\ntype IndicatorProps = {\n  loading: boolean;\n  error: string;\n};\n\nexport default function withIndicator<P>(Loader: FC, Error: FC) {\n  return (Wrapped: FC<P>) => (props: IndicatorProps & P) => {\n    return props.error ? <Error /> : props.loading ? <Loader /> : <Wrapped {...(props as P)} />;\n  };\n}\n","const Spinner = () => {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border text-dark\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import Spinner from './spinner';\nexport default Spinner;\n","import { withIndicator } from '../../hoc';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nimport { FC } from 'react';\n\ntype DataLoaderProps = {\n  label: string;\n  handler(): void;\n};\n\nconst DataLoader: FC<DataLoaderProps> = (props) => {\n  const { label, handler } = props;\n  return (\n    <div className=\"d-flex justify-content-center my-3\">\n      <button className=\"btn btn-lg btn-outline-success\" onClick={handler}>\n        {label}\n      </button>\n    </div>\n  );\n};\n\nexport default withIndicator<DataLoaderProps>(Spinner, ErrorIndicator)(DataLoader);\n","import {\n  ActionTypes,\n  bookErrorType,\n  BookListStateType,\n  bookLoadedType,\n  booksErrorType,\n  booksLoadedType,\n  booksUpdatedType,\n  changeFilterType,\n  changeRequestedBooksCountType,\n  changeSearchQueryType,\n  changeSortType,\n  changeStartIndexType,\n  changeTotalBooksCountType,\n  dataErrorType,\n  dataLoadedType,\n  dataRequestedType,\n  FilterTypes,\n  SortTypes,\n  ThunkType,\n} from './types';\nimport { Book, BookStorageType } from '../../../services/book-storage/types';\n\nconst dataRequested = (): dataRequestedType => ({\n  type: ActionTypes.FETCH_DATA_REQUEST,\n});\nconst dataLoaded = (): dataLoadedType => ({\n  type: ActionTypes.FETCH_DATA_SUCCESS,\n});\nconst dataError = (error: string): dataErrorType => ({\n  type: ActionTypes.FETCH_DATA_FAILURE,\n  payload: error,\n});\nconst booksLoaded = (newBooks: Book[]): booksLoadedType => ({\n  type: ActionTypes.FETCH_BOOKS_SUCCESS,\n  payload: newBooks,\n});\nconst booksError = (): booksErrorType => ({\n  type: ActionTypes.FETCH_BOOKS_FAILURE,\n});\nconst bookLoaded = (newBook: Book): bookLoadedType => {\n  return { type: ActionTypes.FETCH_BOOK_SUCCESS, payload: newBook };\n};\nconst bookError = (): bookErrorType => ({\n  type: ActionTypes.FETCH_BOOK_FAILURE,\n});\nconst booksUpdated = (newBooks: Book[]): booksUpdatedType => ({\n  type: ActionTypes.UPDATE_BOOKS,\n  payload: newBooks,\n});\nconst changeStartIndex = (index: number): changeStartIndexType => ({\n  type: ActionTypes.CHANGE_START_INDEX,\n  payload: index,\n});\nconst changeRequestedBooksCount = (requestedCount: number): changeRequestedBooksCountType => ({\n  type: ActionTypes.CHANGE_REQUESTED_BOOKS_COUNT,\n  payload: requestedCount,\n});\nconst changeTotalBooksCount = (totalCount: number): changeTotalBooksCountType => ({\n  type: ActionTypes.CHANGE_TOTAL_BOOKS_COUNT,\n  payload: totalCount,\n});\nconst changeSort = (sortType: SortTypes): changeSortType => ({\n  type: ActionTypes.CHANGE_SORT_TYPE,\n  payload: sortType,\n});\nconst changeFilter = (filterType: FilterTypes): changeFilterType => ({\n  type: ActionTypes.CHANGE_FILTER_TYPE,\n  payload: filterType,\n});\nconst changeSearchQuery = (query: string): changeSearchQueryType => {\n  return { type: ActionTypes.CHANGE_SEARCH_QUERY, payload: query };\n};\nconst fetchBooks =\n  (bookStorage: BookStorageType): ThunkType =>\n  async (dispatch, getState) => {\n    const { bookList } = getState();\n    dispatch(dataRequested());\n    if (bookList.startIndex) {\n      dispatch(changeStartIndex(0));\n      if (bookList.requestedBooks !== 30) {\n        dispatch(changeRequestedBooksCount(30));\n      }\n    }\n    try {\n      const { bookList } = getState();\n      const books = await mapStateToBooks(bookList, bookStorage);\n      if (bookList.totalBooks !== bookStorage.totalBooks) {\n        dispatch(changeTotalBooksCount(bookStorage.totalBooks));\n      }\n      dispatch(dataLoaded());\n      dispatch(booksLoaded(books));\n    } catch (error) {\n      dispatch(dataError(error));\n      dispatch(booksError());\n    }\n  };\nconst updateBooks =\n  (bookStorage: BookStorageType) =>\n  (index: number, booksCount?: number): ThunkType =>\n  async (dispatch, getState) => {\n    dispatch(dataRequested());\n    dispatch(changeStartIndex(index));\n    if (booksCount) {\n      dispatch(changeRequestedBooksCount(booksCount));\n    }\n    try {\n      const { bookList } = getState();\n      const books = await mapStateToBooks(bookList, bookStorage);\n      if (bookList.totalBooks !== bookStorage.totalBooks) {\n        dispatch(changeTotalBooksCount(bookStorage.totalBooks));\n      }\n      dispatch(dataLoaded());\n      dispatch(booksUpdated(books));\n    } catch (error) {\n      dispatch(dataError(error));\n      dispatch(booksError());\n    }\n  };\nconst fetchBook =\n  (bookStorage: BookStorageType) =>\n  (id: string): ThunkType =>\n  async (dispatch) => {\n    dispatch(dataRequested());\n    try {\n      const book = await bookStorage.getBook(id);\n      dispatch(dataLoaded());\n      dispatch(bookLoaded(book));\n    } catch (error) {\n      dispatch(dataError(error));\n      dispatch(bookError());\n    }\n  };\n\nasync function mapStateToBooks(state: BookListStateType, bookStorage: BookStorageType) {\n  const { query, filterType, sortType, startIndex, requestedBooks } = state;\n  return await bookStorage.getBooks({\n    q: query,\n    category: filterType,\n    orderBy: sortType,\n    startIndex,\n    maxResults: requestedBooks,\n  });\n}\n\nexport { fetchBooks, fetchBook, updateBooks, changeSearchQuery, changeSort, changeFilter };\n","import DataLoader from './data-loader';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withBookStorage, withIndicator } from '../../hoc';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nimport { FC } from 'react';\nimport { DispatchThunkType, OwnProps } from '../../../store/reducers/book-list/types';\nimport { RootStateType } from '../../../store/reducers';\nimport { updateBooks } from '../../../store/reducers/book-list/book-list-actions';\n\ntype DataLoaderContainerProps = {\n  startIndex: number;\n  requestedBooks: number;\n  totalBooks: number;\n  updateBooks(index: number, booksCount?: number): void;\n  loading: boolean;\n  error: string;\n};\n\nconst DataLoaderContainer: FC<DataLoaderContainerProps> = (props) => {\n  const { startIndex, requestedBooks, totalBooks, updateBooks, ...args } = props;\n\n  const loadMore = () => {\n    if (startIndex + requestedBooks <= totalBooks) {\n      updateBooks(startIndex + requestedBooks);\n    } else {\n      updateBooks(startIndex, totalBooks - startIndex);\n    }\n  };\n  if (startIndex + requestedBooks < totalBooks) {\n    return <DataLoader handler={loadMore} label=\"Load more\" {...args} />;\n  }\n  return null;\n};\n\nconst mapStateToProps = ({\n  bookList: { startIndex, requestedBooks, totalBooks, loading, error },\n}: RootStateType) => ({\n  startIndex,\n  requestedBooks,\n  totalBooks,\n  loading,\n  error,\n});\n\nconst mapDispatchToProps = (dispatch: DispatchThunkType, { bookStorage }: OwnProps) => ({\n  updateBooks: (index: number, booksCount?: number) =>\n    dispatch(updateBooks(bookStorage)(index, booksCount)),\n});\n\nexport default compose<FC>(\n  withBookStorage(),\n  connect(mapStateToProps, mapDispatchToProps),\n  withIndicator(Spinner, ErrorIndicator)\n)(DataLoaderContainer);\n","import DataLoaderContainer from './data-loader-container';\nexport default DataLoaderContainer;\n","import BookListItem from '../book-list-item';\nimport FoundBooks from '../found-books';\nimport DataLoader from '../data-loader';\nimport { Book } from '../../../services/book-storage/types';\nimport { FC } from 'react';\n\ntype BookListProps = {\n  books: Book[];\n  selectBook(id: string): void;\n  changeSearchQuery(query: string): void;\n};\nconst BookList: FC<BookListProps> = (props) => {\n  const { books, selectBook, changeSearchQuery } = props;\n  return (\n    <>\n      <FoundBooks />\n      <ul className=\"row list-unstyled\">\n        {books.map((book) => (\n          <li\n            className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 border-2 border-top border-dark p-3\"\n            key={book.id}\n          >\n            <BookListItem book={book} changeQuery={changeSearchQuery} selectBook={selectBook} />\n          </li>\n        ))}\n      </ul>\n      <DataLoader />\n    </>\n  );\n};\n\nexport default BookList;\n","import { bindActionCreators } from 'redux';\nimport * as bookActions from '../store/reducers/book-list/book-list-actions';\nimport { useDispatch } from 'react-redux';\nimport { DispatchThunkType } from '../store/reducers/book-list/types';\nconst useActions = () => {\n  const actions = {\n    ...bookActions,\n  };\n  const dispatch = useDispatch<DispatchThunkType>();\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default useActions;\n","import BookList from './book-list-container';\n\nexport default BookList;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport BookList from './book-list';\nimport { withBookStorage } from '../../hoc';\nimport { FC, useEffect } from 'react';\nimport { DispatchThunkType, OwnProps, ThunkType } from '../../../store/reducers/book-list/types';\nimport { RootStateType } from '../../../store/reducers';\nimport { changeSearchQuery, fetchBooks } from '../../../store/reducers/book-list/book-list-actions';\nimport { Book } from '../../../services/book-storage/types';\nimport useActions from '../../../hooks/useActions';\n\ntype BookListContainerProps = {\n  fetchBooks(): ThunkType;\n  changeSearchQuery(query: string): void;\n  books: Book[];\n  selectBook(id: string): void;\n};\n\nconst BookListContainer: FC<BookListContainerProps> = (props) => {\n  const { fetchBooks, changeSearchQuery, books, selectBook, ...args } = props;\n  const {} = useActions();\n\n  useEffect(() => {\n    fetchBooks();\n  }, [fetchBooks]);\n  return (\n    <BookList\n      changeSearchQuery={changeSearchQuery}\n      books={books}\n      selectBook={selectBook}\n      {...args}\n    />\n  );\n};\n\nconst mapStateToProps = ({ bookList: { query, books, loading, error } }: RootStateType) => ({\n  books,\n  query,\n  loading,\n  error,\n});\nconst mapDispatchToProps = (dispatch: DispatchThunkType, { bookStorage, history }: OwnProps) => ({\n  selectBook: (id: string) => {\n    history.push(`/card/${id}`);\n  },\n  fetchBooks: () => dispatch(fetchBooks(bookStorage)),\n  changeSearchQuery: (query: string) => dispatch(changeSearchQuery(query)),\n});\n\nexport default compose<FC>(\n  withRouter,\n  withBookStorage(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);\n","import React, { ChangeEvent, FC } from 'react';\n\ntype SelectProps = {\n  label: string;\n  options: string[];\n  changeOption(option: string): void;\n  value: string;\n};\nconst Select: FC<SelectProps> = ({ label, options, changeOption, value }) => {\n  const onChangeOption = (e: ChangeEvent<HTMLSelectElement>) => {\n    changeOption(e.target.value);\n  };\n  return (\n    <>\n      <label htmlFor=\"exampleSelect1\" className=\"form-label\">\n        {label}\n      </label>\n      <select className=\"form-select\" id=\"exampleSelect1\" onChange={onChangeOption} value={value}>\n        {options.map((option, index) => {\n          return (\n            <option key={index} value={option}>\n              {option.charAt(0) + option.slice(1)}\n            </option>\n          );\n        })}\n      </select>\n    </>\n  );\n};\n\nexport default Select;\n","import { Select } from '../select';\nimport { FC } from 'react';\ntype BookSearchSettingsProps = {\n  filters: string[];\n  sorts: string[];\n  filterType: string;\n  sortType: string;\n  changeFilter(type: string): void;\n  changeSort(type: string): void;\n};\nconst BookSearchSettings: FC<BookSearchSettingsProps> = ({\n  filters,\n  changeFilter,\n  sorts,\n  changeSort,\n  filterType,\n  sortType,\n}) => {\n  return (\n    <div className=\"accordion accordion-flush mb-4\" id=\"accordionExample\">\n      <div className=\"accordion-item\">\n        <h2 className=\"accordion-header\" id=\"headingOne\">\n          <button\n            className=\"accordion-button fs-5 bg-secondary text-white\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#collapseOne\"\n            aria-expanded=\"true\"\n            aria-controls=\"collapseOne\"\n          >\n            Настройки поиска\n          </button>\n        </h2>\n        <div\n          id=\"collapseOne\"\n          className=\"accordion-collapse collapse text-white \"\n          aria-labelledby=\"headingOne\"\n          data-bs-parent=\"#accordionExample\"\n        >\n          <div className=\"accordion-body\">\n            <div className=\"form-group\">\n              <div className=\"form-control border-0\">\n                <Select\n                  label=\"Filter by\"\n                  options={filters}\n                  changeOption={changeFilter}\n                  value={filterType}\n                />\n              </div>\n              <div className=\"form-control border-0\">\n                <Select\n                  label=\"Sort by\"\n                  options={sorts}\n                  changeOption={changeSort}\n                  value={sortType}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookSearchSettings;\n","import { changeFilter, changeSort } from '../../../store/reducers/book-list/book-list-actions';\nimport { connect } from 'react-redux';\nimport BookSearchSettings from './book-search-settings';\nimport { RootStateType } from '../../../store/reducers';\nimport { FC } from 'react';\n\ntype BookSearchSettingsContainerProps = {\n  filters: string[];\n  sorts: string[];\n  filterType: string;\n  sortType: string;\n  changeFilter(type: string): void;\n  changeSort(type: string): void;\n};\nconst BookSearchSettingsContainer: FC<BookSearchSettingsContainerProps> = (props) => {\n  return <BookSearchSettings {...props} />;\n};\n\nconst mapStateToProps = ({ bookList: { filters, sorts, filterType, sortType } }: RootStateType) => {\n  return {\n    filters,\n    sorts,\n    filterType,\n    sortType,\n  };\n};\nconst mapDispatchToProps = {\n  changeFilter,\n  changeSort,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookSearchSettingsContainer);\n","import BookSearchSettings from './book-search-settings-container';\nexport default BookSearchSettings;\n","import BookList from '../ui/book-list';\nimport BookSearchSettings from '../ui/book-search-settings';\n\nconst HomePage = () => {\n  return (\n    <>\n      <BookSearchSettings />\n      <BookList />\n    </>\n  );\n};\nexport default HomePage;\n","import { withIndicator } from '../../hoc';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nimport { FC } from 'react';\nimport { Book } from '../../../services/book-storage/types';\n\ntype BookDetailProps = {\n  selectedBook: Book;\n};\n\nconst BookDetail: FC<BookDetailProps> = (props) => {\n  const {\n    selectedBook: {\n      title,\n      description,\n      publishedDate,\n      authors,\n      categories,\n      imageLinks,\n      pageCount,\n      language,\n    },\n  } = props;\n\n  const languageLabel = language === 'en' ? 'английский' : 'русский';\n  const descriptionLabel = description?.replaceAll(/<\\/?[^>]+>/g, '') || 'Описание отсутствует';\n  const categoryLabel =\n    categories?.map((category) => <p key={category}>{category}</p>) || 'нет категорий';\n  const dateLabel = publishedDate?.split('-').reverse().join('.') || 'нет даты';\n  const authorLabel =\n    authors?.map((author) => {\n      return (\n        <span key={author} className=\"badge rounded-pill bg-info m-1 fs-5 text-wrap\">\n          {author}\n        </span>\n      );\n    }) || 'нет автора';\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-4\">\n        <img className=\"img-thumbnail mb-3\" alt={title} src={imageLinks?.medium} />\n      </div>\n      <div className=\"col-sm-8\">\n        <h2 className=\"bg-primary p-3 text-white\">{title}</h2>\n        <p>{authorLabel}</p>\n        <p className=\"border p-3\">{descriptionLabel}</p>\n        <h3 className=\"bg-secondary text-white text-center text-sm-start p-2\">Детализация</h3>\n        <dl className=\"row text-center text-sm-start\">\n          <dt className=\"col-sm-3 text-uppercase fs-5\">Дата публикации</dt>\n          <dd className=\"col-sm-9\">{dateLabel}&nbsp;г.</dd>\n          <dt className=\"col-sm-3 text-uppercase fs-5\">Язык книги:</dt>\n          <dd className=\"col-sm-9\">{languageLabel}</dd>\n          <dt className=\"col-sm-3 text-uppercase fs-5\">Всего страниц:</dt>\n          <dd className=\"col-sm-9\">{pageCount}</dd>\n          <dt className=\"col-sm-3 text-uppercase fs-5\">Категории</dt>\n          <dd className=\"col-sm-9\">{categoryLabel}</dd>\n        </dl>\n      </div>\n    </div>\n  );\n};\nexport default withIndicator<BookDetailProps>(Spinner, ErrorIndicator)(BookDetail);\n","import BookDetail from './book-detail-container';\nexport default BookDetail;\n","import { compose } from 'redux';\nimport BookDetail from './book-detail';\nimport { withBookStorage } from '../../hoc';\nimport { connect } from 'react-redux';\nimport { FC, useEffect } from 'react';\nimport { DispatchThunkType, OwnProps, ThunkType } from '../../../store/reducers/book-list/types';\nimport { RootStateType } from '../../../store/reducers';\nimport { fetchBook } from '../../../store/reducers/book-list/book-list-actions';\nimport { Book } from '../../../services/book-storage/types';\nimport { useParams } from 'react-router-dom';\n\ntype BookDetailContainerProps = {\n  fetchBook(id: string): void;\n  selectedBook: Book;\n  loading: boolean;\n  error: string;\n};\n\nconst BookDetailContainer: FC<BookDetailContainerProps> = (props) => {\n  const { fetchBook, selectedBook, ...args } = props;\n  const { id } = useParams<{ id: string }>();\n  useEffect(() => {\n    fetchBook(id);\n  }, [fetchBook, id]);\n  return selectedBook && <BookDetail selectedBook={selectedBook} {...args} />;\n};\n\nconst mapStateToProps = ({ bookList: { selectedBook, loading, error } }: RootStateType) => ({\n  selectedBook,\n  loading,\n  error,\n});\nconst mapDispatchToProps = (dispatch: DispatchThunkType, { bookStorage }: OwnProps) => ({\n  fetchBook: (id: string) => dispatch(fetchBook(bookStorage)(id)),\n});\n\nexport default compose<FC>(\n  withBookStorage(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookDetailContainer);\n","import BookDetail from '../ui/book-detail';\nimport { FC } from 'react';\n\nconst BookPage: FC = () => {\n  return <BookDetail />;\n};\n\nexport default BookPage;\n","const AboutPage = () => {\n  return (\n    <div className=\"text-center my-5\">\n      <div className=\"mb-4 fs-3\">\n        Применил полученые знания о React Redux Typescript из следующих источников:\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-6 p-2\">\n          <div className=\"mb-2 text-uppercase text-danger\">Текстовый материал:</div>\n          <ul className=\"list-unstyled\">\n            <li>\n              <a className=\"text-info\" href=\"https://ru.reactjs.org/\">\n                ReactJS\n              </a>\n            </li>\n            <li>\n              <a className=\"text-info\" href=\"https://github.com/rajdee/redux-in-russian\">\n                Redux\n              </a>\n            </li>\n            <li>\n              <a className=\"text-info\" href=\"https://www.typescriptlang.org/docs/\">\n                Typescript\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-sm-6 p-2\">\n          <div className=\"mb-2 text-uppercase text-danger\">Видеоматериал:</div>\n          <ul className=\"list-unstyled\">\n            <li>\n              <a className=\"text-info\" href=\"https://www.udemy.com/course/pro-react-redux/\">\n                Юрий Бура, React + Redux. Практическая разработка коммерческих React приложений\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"text-info\"\n                href=\"https://www.udemy.com/course/react-2020-complete-guide/\"\n              >\n                Владилен Минин, React JS. Практический курс 2020 (вкл. Хуки, Классы, Redux)\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"text-info\"\n                href=\"https://www.youtube.com/playlist?list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8\"\n              >\n                ReactJS - Путь самурая\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"text-info\"\n                href=\"https://www.youtube.com/playlist?list=PLcvhF2Wqh7DM3z1XqMw0kPuxpbyMo3HvN\"\n              >\n                ReactJS - Путь самурая 2.0\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-sm-6 p-2\">\n          <div className=\"mb-2 text-uppercase text-danger\">Реализовано:</div>\n          <ul className=\"list-unstyled\">\n            <li>Поиск, фильтрация, сортировка книг</li>\n            <li>Динамическая пагинация</li>\n            <li>Обработка загрузки и ошибок</li>\n            <li>Работа с API</li>\n            <li>Динамический роутинг по карточкам</li>\n            <li>Оптимизация компонентов</li>\n          </ul>\n        </div>\n        <div className=\"col-sm-6 p-2\">\n          <div className=\"mb-2 text-uppercase text-danger\">Затронутые темы:</div>\n          <ul className=\"list-unstyled\">\n            <li>Глобальное хранилище</li>\n            <li>Роутинг</li>\n            <li>Условный рендеринг</li>\n            <li>Референсы</li>\n            <li>Хуки</li>\n            <li>Компоненты высшего порядка</li>\n            <li>Bootstrap</li>\n            <li>Средства отладки кода redux-dev-tools</li>\n            <li>eslint и prettier</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutPage;\n","import { ChangeEvent, FC, FormEvent, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\ntype SearchPanelType = {\n  query: string;\n  changeSearchQuery(query: string): void;\n  fetchBooks(): void;\n};\nconst SearchPanel: FC<SearchPanelType> = ({ query, changeSearchQuery, fetchBooks }) => {\n  const history = useHistory();\n  const findBooksByQuery = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (history.location.pathname !== '/') {\n      history.push('/');\n    }\n    fetchBooks();\n  };\n  const inputRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    inputRef!.current!.focus();\n  }, []);\n  const inputHandler = (e: ChangeEvent<HTMLInputElement>) => changeSearchQuery(e.target.value);\n  return (\n    <form className=\"d-flex mw-100\" onSubmit={findBooksByQuery}>\n      <input\n        className=\"form-control me-2\"\n        type=\"text\"\n        placeholder=\"Введите запрос\"\n        value={query}\n        onChange={inputHandler}\n        ref={inputRef}\n      />\n      <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">\n        Поиск\n      </button>\n    </form>\n  );\n};\n\nexport default SearchPanel;\n","import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootStateType } from '../store/reducers';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector;\n","import SearchPanelContainer from './search-panel-container';\nexport default SearchPanelContainer;\n","import SearchPanel from './search-panel';\nimport { changeSearchQuery, fetchBooks } from '../../../store/reducers/book-list/book-list-actions';\nimport { BookStorageType } from '../../../services/book-storage/types';\nimport { FC, useContext } from 'react';\nimport BookStorageContext from '../../../context/book-storage';\nimport useActions from '../../../hooks/useActions';\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\n\nconst SearchPanelContainer: FC = () => {\n  const query = useTypedSelector((state) => state.bookList.query);\n  const bookStorage = useContext<BookStorageType>(BookStorageContext);\n  const { changeSearchQuery, fetchBooks } = useActions();\n  return (\n    <SearchPanel\n      query={query}\n      fetchBooks={() => fetchBooks(bookStorage)}\n      changeSearchQuery={(q) => changeSearchQuery(q)}\n    />\n  );\n};\n\nexport default SearchPanelContainer;\n","import SearchPanel from '../search-panel';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary mt-1 mb-3\">\n      <div className=\"container-fluid\">\n        <NavLink className=\"navbar-brand fs-1\" to=\"/\">\n          BookStorage\n        </NavLink>\n        <button\n          className=\"navbar-toggler collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarColor01\"\n          aria-controls=\"navbarColor01\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"navbar-collapse collapse\" id=\"navbarColor01\">\n          <ul className=\"navbar-nav me-auto\">\n            <li className=\"nav-item\">\n              <NavLink to=\"/about\" className=\"nav-link fs-5\">\n                О проекте\n                <span className=\"visually-hidden\">(current)</span>\n              </NavLink>\n            </li>\n          </ul>\n          <SearchPanel />\n        </div>\n      </div>\n    </nav>\n  );\n};\nexport default Header;\n","import App from './app';\nexport default App;\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport { AboutPage, BookPage, HomePage } from '../../pages';\nimport Header from '../header/header';\nimport { FC } from 'react';\n\nconst App: FC = () => {\n  return (\n    <div className=\"container-xxl\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/card/:id\" component={BookPage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport ErrorBoundary from './components/ui/error-boundary';\nimport App from './components/ui/app';\nimport BookStorage from './services/book-storage';\nimport BookStorageContext from './context/book-storage';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport 'bootswatch/dist/sketchy/bootstrap.min.css';\n\nconst bookStorage = new BookStorage();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ErrorBoundary>\n        <BookStorageContext.Provider value={bookStorage}>\n          <Router>\n            <App />\n          </Router>\n        </BookStorageContext.Provider>\n      </ErrorBoundary>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}