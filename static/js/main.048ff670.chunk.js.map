{"version":3,"sources":["store/reducers/book-list/types.ts","store/reducers/book-list/book-list.ts","store/reducers/index.ts","store/store.ts","components/ui/error-indicator/index.ts","components/ui/error-indicator/error-indicator.tsx","components/ui/error-boundary/index.ts","components/ui/error-boundary/error-boundary.tsx","components/ui/book-list-item/book-list-item.tsx","components/ui/book-list-item/index.ts","utils/declination-of-numbers.ts","components/ui/found-books/found-books.tsx","components/ui/found-books/index.ts","components/ui/found-books/found-books-container.tsx","services/book-storage/index.ts","services/book-storage/book-storage.ts","context/book-storage/book-storage.tsx","context/book-storage/index.ts","components/hoc/with-book-storage.tsx","components/hoc/with-indicator.tsx","components/ui/spinner/index.ts","components/ui/spinner/spinner.tsx","components/ui/data-loader/data-loader.tsx","store/reducers/book-list/book-list-actions.ts","components/ui/data-loader/data-loader-container.tsx","components/ui/data-loader/index.ts","components/ui/book-list/book-list.tsx","components/ui/book-list/index.ts","components/ui/book-list/book-list-container.tsx","components/ui/select/select.tsx","components/ui/book-search-settings/book-search-settings.tsx","components/ui/book-search-settings/book-search-settings-container.tsx","components/ui/book-search-settings/index.ts","components/pages/home-page.tsx","components/ui/book-detail/book-detail.tsx","components/ui/book-detail/index.ts","components/ui/book-detail/book-detail-container.tsx","components/pages/book-page.tsx","components/pages/about-page.tsx","components/ui/search-panel/search-panel.tsx","components/ui/search-panel/index.ts","components/ui/search-panel/search-panel-container.tsx","components/ui/header/header.tsx","components/ui/app/index.ts","components/ui/app/app.tsx","index.tsx"],"names":["ActionTypes","FilterTypes","SortTypes","initialState","books","selectedBook","loading","error","query","filterType","ALL","sortType","RELEVANCE","filters","Object","keys","sorts","startIndex","requestedBooks","totalBooks","rootReducer","combineReducers","bookList","state","action","type","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","payload","FETCH_BOOKS_SUCCESS","FETCH_BOOKS_FAILURE","UPDATE_BOOKS","concat","FETCH_BOOK_SUCCESS","FETCH_BOOK_FAILURE","CHANGE_START_INDEX","CHANGE_REQUESTED_BOOKS_COUNT","CHANGE_TOTAL_BOOKS_COUNT","CHANGE_SEARCH_QUERY","trimStart","toLowerCase","CHANGE_SORT_TYPE","CHANGE_FILTER_TYPE","createStore","composeWithDevTools","applyMiddleware","thunk","ErrorIndicator","ErrorBoundary","hasError","errorInfo","this","setState","props","children","Component","CroppedText","text","maxLen","more","length","slice","BookListItem","book","changeQuery","selectBook","id","title","description","authors","imageLinks","onSelectBook","descriptionLabel","readMore","className","style","textDecoration","cursor","onClick","src","thumbnail","alt","e","target","innerText","searchByAuthor","join","declOfNum","n","text_forms","n1","Math","abs","FoundBooks","queryLabel","booksLabel","foundLabel","totalLabel","textTransform","useSelector","useMemo","bookDeclination","findDeclination","BookStorage","_API_KEY","_BASE_URL","_totalBooks","_defaultQuery","_defaultParams","hl","printType","filter","key","data","volumeInfo","categories","publishedDate","pageCount","language","publisher","dimensions","params","q","category","maxResults","orderBy","url","axios","get","_createParams","response","console","log","booksParams","a","_getResource","totalItems","items","map","_transformToBook","bookId","bookStorage","BookStorageContext","React","createContext","withBookStorage","Wrapped","useContext","withIndicator","Loader","Error","Spinner","role","label","handler","dataRequested","dataLoaded","dataError","booksError","changeStartIndex","index","changeRequestedBooksCount","requestedCount","changeTotalBooksCount","totalCount","changeSearchQuery","fetchBooks","dispatch","getState","mapStateToBooks","newBooks","getBooks","DataLoaderContainer","compose","connect","updateBooks","booksCount","BookList","withRouter","history","push","args","useEffect","Select","options","changeOption","value","htmlFor","onChange","option","charAt","BookSearchSettings","changeFilterType","changeSortType","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","mapDispatchToProps","HomePage","languageLabel","replaceAll","categoryLabel","dateLabel","split","reverse","authorLabel","author","medium","BookDetail","fetchBook","getBook","newBook","BookPage","useParams","AboutPage","href","SearchPanel","useHistory","inputRef","useRef","current","focus","onSubmit","preventDefault","location","pathname","placeholder","ref","SearchPanelContainer","ownProps","Header","to","aria-label","App","exact","path","component","ReactDOM","render","StrictMode","store","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.048ff670.chunk.js","sourcesContent":["import {Book, BookStorageType} from \"../../../services/book-storage/types\";\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\nimport {RootStateType} from \"../index\";\nimport {Dispatch} from \"redux\";\nimport {BrowserRouterProps} from \"react-router-dom\";\n\nexport enum ActionTypes {\n    FETCH_DATA_REQUEST = 'FETCH_DATA_REQUEST',\n    FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS',\n    FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE',\n    FETCH_BOOKS_SUCCESS = 'FETCH_BOOKS_SUCCESS',\n    FETCH_BOOKS_FAILURE = 'FETCH_BOOKS_FAILURE',\n    FETCH_BOOK_SUCCESS = 'FETCH_BOOK_SUCCESS',\n    FETCH_BOOK_FAILURE = 'FETCH_BOOK_FAILURE',\n    UPDATE_BOOKS = 'UPDATE_BOOKS',\n    CHANGE_START_INDEX = 'CHANGE_START_INDEX',\n    CHANGE_REQUESTED_BOOKS_COUNT = 'CHANGE_REQUESTED_BOOKS_COUNT',\n    CHANGE_TOTAL_BOOKS_COUNT = 'CHANGE_TOTAL_BOOKS_COUNT',\n    CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY',\n    CHANGE_SORT_TYPE = 'CHANGE_SORT_TYPE',\n    CHANGE_FILTER_TYPE = 'CHANGE_FILTER_TYPE',\n}\n\nexport enum FilterTypes {\n    ALL = 'all',\n    ART = 'art',\n    BIOGRAPHY = 'biography',\n    COMPUTERS = 'computers',\n    HISTORY = 'history',\n    MEDICAL = 'medical',\n    POETRY = 'poetry'\n}\n\nexport enum SortTypes {\n    RELEVANCE = 'relevance',\n    NEWEST = 'newest'\n}\n\n/* TODO\n    error : string | null ? object | null -\n    filterType : one of types FilterTypes -\n    sortType : one of types SortTypes -\n*/\nexport type BookListStateType = {\n    loading: boolean,\n    error: string | null,\n    query: string,\n    filterType: string,\n    sortType: string,\n    startIndex: number,\n    requestedBooks: number,\n    totalBooks: number\n    selectedBook: Book | null;\n    books: Book[];\n    filters: string[],\n    sorts: string[],\n}\n\nexport type ActionType = {\n    type: string,\n    payload?: any\n}\nexport interface OwnProps {\n    bookStorage: BookStorageType\n    history?: any\n}\n// TODO refactor\nexport type ThunkType = ThunkAction<Promise<void>, RootStateType, unknown, ActionType>\nexport type DispatchThunkType = ThunkDispatch<RootStateType, unknown, ActionType>\nexport type DispatchType = Dispatch<ActionType>\n","import {ActionType, ActionTypes, BookListStateType, FilterTypes, SortTypes} from \"./types\";\n\n\nconst initialState = {\n    books: [],\n    selectedBook: null,\n    loading: false,\n    error: null,\n    query: '',\n    filterType: FilterTypes.ALL,\n    sortType: SortTypes.RELEVANCE,\n    filters: Object.keys(FilterTypes),\n    sorts: Object.keys(SortTypes),\n    startIndex: 0,\n    requestedBooks: 30,\n    totalBooks: 0\n}\n\nconst bookList = (state: BookListStateType = initialState, action: ActionType): BookListStateType => {\n    switch (action.type) {\n        case ActionTypes.FETCH_DATA_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        case ActionTypes.FETCH_DATA_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: null\n            }\n        case ActionTypes.FETCH_DATA_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        case ActionTypes.FETCH_BOOKS_SUCCESS:\n            return {\n                ...state,\n                books: action.payload\n            }\n        case ActionTypes.FETCH_BOOKS_FAILURE:\n            return {\n                ...state,\n                books: []\n            }\n        case ActionTypes.UPDATE_BOOKS:\n            return {\n                ...state,\n                books: state.books.concat(action.payload)\n            }\n        case ActionTypes.FETCH_BOOK_SUCCESS:\n            return {\n                ...state,\n                selectedBook: action.payload\n            }\n        case ActionTypes.FETCH_BOOK_FAILURE:\n            return {\n                ...state,\n                selectedBook: null\n            }\n        case ActionTypes.CHANGE_START_INDEX:\n            return {\n                ...state,\n                startIndex: action.payload\n            }\n        case ActionTypes.CHANGE_REQUESTED_BOOKS_COUNT:\n            return {\n                ...state,\n                requestedBooks: action.payload\n            }\n        case ActionTypes.CHANGE_TOTAL_BOOKS_COUNT:\n            return {\n                ...state,\n                totalBooks: action.payload\n            }\n\n        case ActionTypes.CHANGE_SEARCH_QUERY:\n            return {\n                ...state,\n                query: action.payload.trimStart().toLowerCase()\n            }\n        case ActionTypes.CHANGE_SORT_TYPE:\n            return {\n                ...state,\n                sortType: action.payload\n            }\n        case ActionTypes.CHANGE_FILTER_TYPE:\n            return {\n                ...state,\n                filterType: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport {bookList};\n","import {combineReducers} from \"redux\";\nimport {bookList} from \"./book-list/book-list\";\n\n\nconst rootReducer = combineReducers({\n    bookList,\n});\nexport type RootStateType = ReturnType<typeof rootReducer>\nexport default rootReducer;\n","import {applyMiddleware, createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","import ErrorIndicator from \"./error-indicator\";\nexport default ErrorIndicator;\n","const ErrorIndicator = () => {\n    return <div>Error. OOPS something's wrong :(</div>\n}\nexport default ErrorIndicator;\n","import ErrorBoundary from \"./error-boundary\";\nexport default ErrorBoundary;\n","import {Component, ErrorInfo} from \"react\";\nimport ErrorIndicator from \"../error-indicator\";\n\nexport default class ErrorBoundary extends Component{\n    state = {\n        hasError: false\n    }\n    componentDidCatch(error:Error, errorInfo: ErrorInfo) {\n        this.setState({hasError: true});\n    }\n    render(){\n        return this.state.hasError?  <ErrorIndicator/> : this.props.children\n    }\n}\n","import {ChangeEvent, FC, MouseEventHandler, ReactNode} from \"react\";\nimport {Book} from \"../../../services/book-storage/types\";\n\ntype BookListItemProps = {\n    book: Book,\n    changeQuery(query: string):void,\n    selectBook(id:string):void\n}\n\nconst BookListItem:FC<BookListItemProps>= ({book, changeQuery, selectBook}) => {\n    const {id, title, description, authors, imageLinks} = book;\n    const onSelectBook = () => selectBook(id)\n    // TODO e: MouseEvent<HTMLButtonElement>\n    const searchByAuthor = (e:any) => changeQuery(e.target.innerText)\n    const descriptionLabel = description || 'Описание отсутствует'\n    const readMore = <span\n        className='link-info ms-3'\n        style={{textDecoration: 'underline', cursor: 'pointer'}}\n        onClick={onSelectBook}>Read more</span>\n\n    return (\n        <div className='d-flex flex-wrap justify-content-center flex-lg-column page-link border-0'>\n            <div className='flex-shrink-0 d-flex justify-content-center p-2'>\n                <img\n                    style={{cursor: 'pointer'}}\n                    className='img-thumbnail'\n                    src={imageLinks.thumbnail}\n                    alt={title}\n                    onClick={onSelectBook}/>\n            </div>\n            <div className='flex-grow-1 d-flex justify-content-between flex-column p-2'>\n                <div className='mb-3'>\n                    <div style={{cursor: 'pointer'}} className=\"fs-5 link-info text-decoration-underline mb-2\" onClick={onSelectBook}>\n                        <CroppedText text={title} maxLen={100}/>\n                    </div>\n                    {authors\n                        ? <button className=\"btn btn-dark btn-sm\" onClick={(e)=>searchByAuthor(e)}>{authors.join()}</button>\n                        : <span>Нет автора</span>}\n                </div>\n                <p className=\"card-text\">\n                    <CroppedText text={descriptionLabel} maxLen={150} more={readMore}/>\n                </p>\n            </div>\n        </div>\n    )\n}\n\ntype CroppedTextProps = {\n    text: string, maxLen: number, more?:ReactNode\n}\nconst CroppedText:FC<CroppedTextProps> = ({text, maxLen, more}) => {\n    return text?.length > maxLen\n        ? <>{text.slice(0, maxLen) + ' ...'}{more}</>\n        : <>{text}</>\n}\n\nexport default BookListItem;\n","import BookListItem from \"./book-list-item\";\nexport default BookListItem;\n","export default function declOfNum(n:number, text_forms: string[]) {\n    n = Math.abs(n) % 100;\n    let n1 = n % 10;\n    if (n > 10 && n < 20) { return text_forms[2]; }\n    if (n1 > 1 && n1 < 5) { return text_forms[1]; }\n    if (n1 === 1) { return text_forms[0]; }\n    return text_forms[2];\n}\n","import {FC} from \"react\";\n\ntype FoundBooksProps = {\n    queryLabel: string,\n    booksLabel: string,\n    foundLabel: string,\n    totalLabel: number\n}\nconst FoundBooks: FC<FoundBooksProps> = (props) => {\n    const {queryLabel, booksLabel, foundLabel, totalLabel} = props;\n    return (\n        <div className='d-flex justify-content-center flex-wrap mb-4 fs-5'>\n            {\n                queryLabel === '' ?\n                    <>\n                        <span style={{textTransform: 'capitalize'}}>{foundLabel}</span>&nbsp;\n                        <span className='text-info'>{totalLabel}</span>&nbsp;\n                        {booksLabel}\n                    </>\n                    :\n                    <>\n                        По запросу&nbsp;<span className='text-success'>\" {queryLabel} \"</span>&nbsp;\n                        {foundLabel}&nbsp;\n                        <span className='text-info'>{totalLabel}</span>&nbsp;\n                        {booksLabel}\n                    </>\n\n            }\n        </div>\n    )\n}\nexport default FoundBooks;\n","import FoundBooks from \"./found-books-container\";\nexport default FoundBooks;\n","import {declOfNum} from \"../../../utils\";\nimport FoundBooks from \"./found-books\";\nimport {useSelector} from \"react-redux\";\nimport {FC, useMemo} from \"react\";\nimport {RootStateType} from \"../../../store/reducers\";\n\nconst FoundBooksContainer:FC = () => {\n    const {query, totalBooks} = useSelector(({bookList: {query, totalBooks}}:RootStateType) => ({query, totalBooks}));\n    const [bookDeclination,findDeclination] = useMemo(()=>{\n        return [declOfNum(totalBooks, ['книга', 'книги', 'книг']), declOfNum(totalBooks, ['найдена', 'найдено', 'найдено'])]\n    }, [totalBooks]);\n\n    const foundBooks = useMemo(()=>{\n        return <FoundBooks\n            queryLabel={query}\n            booksLabel={bookDeclination}\n            foundLabel={findDeclination}\n            totalLabel={totalBooks}\n        />\n    },[totalBooks])\n\n    return foundBooks\n}\n\n\nexport default FoundBooksContainer;\n","import BookStorage from \"./book-storage\";\nexport default BookStorage;\n","import axios from \"axios\";\nimport {Book, BookResponse, BooksResponse,  QueryStringParams} from \"./types\";\n\nexport default class BookStorage {\n    private _API_KEY = 'AIzaSyAMf9konvBhoN-z4XY23JdJ80KrT1zZbv0';\n    private _BASE_URL = 'https://www.googleapis.com/books/v1/volumes'\n    private _totalBooks = 0\n    private _defaultQuery = 'books'\n    private _defaultParams = {\n        hl: 'ru',\n        printType: 'books',\n        filter: 'partial',\n        key: this._API_KEY,\n    }\n    private _transformToBook(data: BookResponse):Book {\n        const {\n            title, authors, categories,\n            publishedDate, imageLinks, description,\n            pageCount, language, publisher, dimensions\n        } = data.volumeInfo;\n        return {\n            id: data.id,\n            title, authors, categories, publishedDate,\n            imageLinks, description, pageCount,\n            language, publisher, dimensions\n        }\n    }\n    private _createParams(params?: QueryStringParams){\n        if (!params) {\n            return this._defaultParams\n        }\n        return {\n            q: params.q === ''? this._defaultQuery: `${params.q}+subject=${params.category}`,\n            startIndex: params.startIndex,\n            maxResults: params.maxResults,\n            orderBy: params.orderBy,\n            ...this._defaultParams\n        }\n    }\n    private async _getResource(url: string, params?: QueryStringParams) {\n        try {\n            const response = await axios.get(`${this._BASE_URL}/${url}`, {\n                params: this._createParams(params)\n            })\n            return response.data\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    async getBooks(booksParams:QueryStringParams) {\n        const data : BooksResponse = await this._getResource('', booksParams)\n        this._totalBooks = data.totalItems;\n        return data.items.map((book:BookResponse) => this._transformToBook(book))\n    }\n    async getBook(bookId:string) {\n        return this._transformToBook(await this._getResource(bookId))\n    }\n    get totalBooks() {\n        return this._totalBooks\n    }\n}\n","import React from \"react\";\nimport BookStorage from \"../../services/book-storage\";\nimport {BookStorageType} from \"../../services/book-storage/types\";\n\n\nconst bookStorage = new BookStorage();\nconst BookStorageContext = React.createContext<BookStorageType>(bookStorage);\n\nexport default BookStorageContext;\n","import BookStorageContext from \"./book-storage\";\nexport default BookStorageContext;\n","import BookStorageContext from \"../../context/book-storage\";\nimport {FC, useContext} from \"react\";\n\nconst withBookStorage = () => (Wrapped:FC) => {\n    return (props:any) => {\n        return <Wrapped {...props} bookStorage={useContext(BookStorageContext)}/>\n    }\n}\nexport default withBookStorage;\n","import {FC} from \"react\";\n\ninterface IndicatorProps {\n    loading: boolean,\n    error: string,\n}\n\n//TODO FC is correct? change props\nconst withIndicator = (Loader: FC, Error: FC) => (Wrapped: FC<any>) => {\n    return (props: any) => {\n        return (\n            props.error ? <Error/>\n                : props.loading ? <Loader/>\n                : <Wrapped {...props}/>\n        )\n    }\n}\n\nexport default withIndicator;\n","import Spinner from \"./spinner\";\nexport default Spinner;\n","const Spinner = ()=>{\n    return (\n        <div className='d-flex justify-content-center'>\n            <div className=\"spinner-border text-dark\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Spinner;\n","import {withIndicator} from \"../../hoc\";\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\nimport {FC} from \"react\";\n\ntype DataLoaderProps = {\n    label: string,\n    handler(): void\n}\n\nconst DataLoader:FC<DataLoaderProps> = (props)=>{\n    const {label,handler} = props;\n    return (\n        <div className='d-flex justify-content-center my-3'>\n            <button className='btn btn-lg btn-outline-success' onClick={handler}>\n                {label}\n            </button>\n        </div>\n    )\n}\n\n\nexport default withIndicator(Spinner, ErrorIndicator)(DataLoader)\n","import {ActionTypes, BookListStateType, ThunkType} from \"./types\";\nimport {Book, BookStorageType} from \"../../../services/book-storage/types\";\n\nconst dataRequested = () => ({\n    type: ActionTypes.FETCH_DATA_REQUEST\n});\nconst dataLoaded = () => ({\n    type: ActionTypes.FETCH_DATA_SUCCESS\n});\n// TODO error : object | string\nconst dataError = (error: string) => ({\n    type: ActionTypes.FETCH_DATA_FAILURE, payload: error\n});\nconst booksLoaded = (newBooks: Book[]) => ({\n    type: ActionTypes.FETCH_BOOKS_SUCCESS, payload: newBooks\n});\nconst booksError = () => ({\n    type: ActionTypes.FETCH_BOOKS_FAILURE\n});\nconst bookLoaded = (newBook: Book) => {\n    return {type: ActionTypes.FETCH_BOOK_SUCCESS, payload: newBook}\n}\nconst bookError = () => ({\n    type: ActionTypes.FETCH_BOOK_FAILURE\n})\nconst booksUpdated = (newBooks: Book[]) => ({\n    type: ActionTypes.UPDATE_BOOKS, payload: newBooks\n})\nconst changeStartIndex = (index: number) => ({\n    type: ActionTypes.CHANGE_START_INDEX, payload: index\n})\nconst changeRequestedBooksCount = (requestedCount: number) => ({\n    type: ActionTypes.CHANGE_REQUESTED_BOOKS_COUNT, payload: requestedCount\n})\nconst changeTotalBooksCount = (totalCount: number) => ({\n    type: ActionTypes.CHANGE_TOTAL_BOOKS_COUNT, payload: totalCount\n})\n// TODO sortType : SortTypes\nconst changeSortType = (sortType: string) => ({\n    type: ActionTypes.CHANGE_SORT_TYPE, payload: sortType\n});\n// TODO filterType : FilterTypes\nconst changeFilterType = (filterType: string) => ({\n    type: ActionTypes.CHANGE_FILTER_TYPE, payload: filterType\n})\nconst changeSearchQuery = (query: string) => {\n    return {type: ActionTypes.CHANGE_SEARCH_QUERY, payload: query}\n}\nconst fetchBooks = (bookStorage: BookStorageType): ThunkType =>\n    async (dispatch, getState) => {\n        const {bookList} = getState();\n        dispatch(dataRequested());\n        if (bookList.startIndex) {\n            dispatch(changeStartIndex(0))\n            if (bookList.requestedBooks !== 30) {\n                dispatch(changeRequestedBooksCount(30))\n            }\n        }\n        try {\n            const {bookList} = getState();\n            const books = await mapStateToBooks(bookList, bookStorage)\n            if (bookList.totalBooks !== bookStorage.totalBooks) {\n                dispatch(changeTotalBooksCount(bookStorage.totalBooks));\n            }\n            dispatch(dataLoaded());\n            dispatch(booksLoaded(books));\n\n        } catch (error) {\n            dispatch(dataError(error));\n            dispatch(booksError());\n        }\n    }\nconst updateBooks = (bookStorage: BookStorageType) => (index: number, booksCount?: number): ThunkType =>\n    async (dispatch, getState) => {\n        dispatch(dataRequested());\n        dispatch(changeStartIndex(index));\n        if (booksCount) {\n            dispatch(changeRequestedBooksCount(booksCount))\n        }\n        try {\n            const {bookList} = getState();\n            const books = await mapStateToBooks(bookList, bookStorage)\n            if (bookList.totalBooks !== bookStorage.totalBooks) {\n                dispatch(changeTotalBooksCount(bookStorage.totalBooks));\n            }\n            dispatch(dataLoaded());\n            dispatch(booksUpdated(books))\n        } catch (error) {\n            dispatch(dataError(error));\n            dispatch(booksError());\n        }\n    }\nconst fetchBook = (bookStorage: BookStorageType) => (id: string): ThunkType =>\n    async (dispatch) => {\n        dispatch(dataRequested());\n        try {\n            const book = await bookStorage.getBook(id)\n            dispatch(dataLoaded());\n            dispatch(bookLoaded(book));\n        } catch (error) {\n            dispatch(dataError(error));\n            dispatch(bookError());\n        }\n    }\n\nasync function mapStateToBooks(state: BookListStateType, bookStorage: BookStorageType) {\n    const {\n        query,\n        filterType, sortType,\n        startIndex, requestedBooks,\n    } = state;\n    return await bookStorage.getBooks({\n        q: query,\n        category: filterType,\n        orderBy: sortType,\n        startIndex,\n        maxResults: requestedBooks\n    })\n}\n\nexport {\n    fetchBooks,\n    fetchBook,\n    updateBooks,\n    changeSearchQuery,\n    changeSortType,\n    changeFilterType,\n};\n","import DataLoader from \"./data-loader\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withBookStorage, withIndicator} from \"../../hoc\";\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\nimport {FC} from \"react\";\nimport {DispatchThunkType, OwnProps} from \"../../../store/reducers/book-list/types\";\nimport {RootStateType} from \"../../../store/reducers\";\nimport {updateBooks} from \"../../../store/reducers/book-list/book-list-actions\";\n\n\ntype DataLoaderContainerProps = {\n    startIndex: number,\n    requestedBooks: number,\n    totalBooks: number,\n    updateBooks(index: number, booksCount?: number): void\n}\n\n\nconst DataLoaderContainer: FC<DataLoaderContainerProps> = (props) => {\n    const {startIndex, requestedBooks, totalBooks, updateBooks} = props;\n\n    const loadMore = () => {\n        if (startIndex + requestedBooks <= totalBooks) {\n            updateBooks(startIndex + requestedBooks)\n        } else {\n            updateBooks(startIndex, totalBooks - startIndex)\n        }\n    }\n    if (startIndex + requestedBooks < totalBooks) {\n        return <DataLoader handler={loadMore} label='Load more'/>\n    }\n    return null;\n}\n\n\nconst mapStateToProps = ({bookList: {startIndex, requestedBooks, totalBooks, loading, error}}: RootStateType) => ({\n    startIndex, requestedBooks, totalBooks, loading, error\n})\n\nconst mapDispatchToProps = (dispatch: DispatchThunkType, {bookStorage}: OwnProps) => ({\n    updateBooks: (index: number, booksCount?: number) => dispatch(updateBooks(bookStorage)(index, booksCount)),\n})\n\nexport default compose(\n    withBookStorage(),\n    connect(mapStateToProps, mapDispatchToProps),\n    withIndicator(Spinner, ErrorIndicator)\n)(DataLoaderContainer) as React.ComponentType\n","import DataLoaderContainer from \"./data-loader-container\";\nexport default DataLoaderContainer\n","import BookListItem from \"../book-list-item\";\nimport FoundBooks from \"../found-books\";\nimport DataLoader from \"../data-loader\";\nimport {Book} from \"../../../services/book-storage/types\";\nimport {FC} from \"react\";\n\ntype BookListProps = {\n    books: Book[],\n    selectBook(id:string):void,\n    changeSearchQuery(query:string):void\n}\nconst BookList:FC<BookListProps> = (props) => {\n    const {books, selectBook, changeSearchQuery} = props;\n    return (\n        <>\n            <FoundBooks/>\n            <ul className=\"row list-unstyled\">\n                {books.map(book => (\n                    <li className='col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 border-2 border-top border-dark p-3'\n                        key={book.id}>\n                        <BookListItem book={book} changeQuery={changeSearchQuery} selectBook={selectBook}/>\n                    </li>\n                ))}\n            </ul>\n            <DataLoader/>\n        </>\n\n    )\n}\n\n\nexport default (BookList);\n","import BookList from \"./book-list-container\";\n\nexport default BookList;\n","import {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withRouter} from 'react-router-dom'\nimport BookList from \"./book-list\";\nimport {withBookStorage} from \"../../hoc\";\nimport {FC, useEffect} from \"react\";\nimport {DispatchThunkType, OwnProps, ThunkType} from \"../../../store/reducers/book-list/types\";\nimport {RootStateType} from \"../../../store/reducers\";\nimport {changeSearchQuery, fetchBooks} from \"../../../store/reducers/book-list/book-list-actions\";\nimport {Book} from \"../../../services/book-storage/types\";\n\n\ntype BookListContainerProps = {\n    fetchBooks(): ThunkType,\n    changeSearchQuery(query: string): void,\n    books: Book[],\n    selectBook(id: string): void\n}\n\nconst BookListContainer: FC<BookListContainerProps> = (props) => {\n    const {fetchBooks, changeSearchQuery, books, selectBook, ...args} = props;\n    useEffect(() => {\n        fetchBooks()\n    }, [fetchBooks])\n    return <BookList\n        changeSearchQuery={changeSearchQuery}\n        books={books}\n        selectBook={selectBook}\n        {...args}/>\n}\n\nconst mapStateToProps = ({bookList: {query, books, loading, error}}: RootStateType) => ({\n    books, query, loading, error\n})\nconst mapDispatchToProps = (dispatch: DispatchThunkType, {bookStorage, history, ...args}: OwnProps) => ({\n    selectBook: (id: string) => {\n        history.push(`/card/${id}`);\n    },\n    fetchBooks: () => dispatch(fetchBooks(bookStorage)),\n    changeSearchQuery: (query: string) => dispatch(changeSearchQuery(query)),\n})\n\nexport default compose(\n    withRouter,\n    withBookStorage(),\n    connect(mapStateToProps, mapDispatchToProps),\n)(BookListContainer) as React.ComponentType\n","import {ChangeEvent, FC} from \"react\";\n\ntype SelectProps = {\n    label:string,\n    options: string[],\n    changeOption(option: string):void,\n    value: string\n}\nconst Select:FC<SelectProps> = ({label,options, changeOption, value}) => {\n    const onChangeOption = (e:ChangeEvent<HTMLSelectElement>) => {\n        changeOption(e.target.value)\n    }\n    return (\n        <>\n            <label htmlFor=\"exampleSelect1\" className=\"form-label\">{label}</label>\n            <select className=\"form-select\" id=\"exampleSelect1\" onChange={onChangeOption} value={value}>\n                {\n                    options.map((option, index) => {\n                        return <option key={index} value={option}>{option.charAt(0) + option.slice(1)}</option>\n                    })\n                }\n            </select>\n        </>\n    )\n}\n\nexport default Select;\n","import {Select} from \"../select\";\nimport {FC} from \"react\";\ntype BookSearchSettingsProps = {\n    filters:string[],\n    sorts: string[],\n    filterType:string,\n    sortType:string,\n    changeFilterType(type:string):void,\n    changeSortType(type:string):void,\n}\nconst BookSearchSettings:FC<BookSearchSettingsProps> = ({filters, changeFilterType, sorts, changeSortType,filterType,sortType}) => {\n    return (\n        <div className=\"accordion accordion-flush mb-4\" id=\"accordionExample\">\n            <div className=\"accordion-item\">\n                <h2 className=\"accordion-header\" id=\"headingOne\">\n                    <button className=\"accordion-button fs-5 bg-secondary text-white\" type=\"button\" data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                        Настройки поиска\n                    </button>\n                </h2>\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse text-white \" aria-labelledby=\"headingOne\"\n                     data-bs-parent=\"#accordionExample\" >\n                    <div className=\"accordion-body\">\n                        <div className=\"form-group\">\n                            <div className='form-control border-0'>\n                                <Select label='Filter by' options={filters} changeOption={changeFilterType} value={filterType} />\n                            </div>\n                            <div className='form-control border-0'>\n                                <Select label='Sort by' options={sorts} changeOption={changeSortType} value={sortType}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BookSearchSettings;\n","import {changeFilterType, changeSortType} from \"../../../store/reducers/book-list/book-list-actions\";\nimport {connect} from \"react-redux\";\nimport BookSearchSettings from \"./book-search-settings\";\nimport {RootStateType} from \"../../../store/reducers\";\nimport {FC} from \"react\";\n\n\ntype BookSearchSettingsContainerProps={\n    filters:string[],\n    sorts: string[],\n    filterType:string,\n    sortType:string,\n    changeFilterType(type:string):void,\n    changeSortType(type:string):void,\n}\nconst BookSearchSettingsContainer:FC<BookSearchSettingsContainerProps> = (props) => {\n    return <BookSearchSettings {...props}/>\n}\n\nconst mapStateToProps = ({bookList: {filters, sorts,filterType,sortType}}:RootStateType) => {\n    return {\n        filters,\n        sorts,\n        filterType,\n        sortType\n    }\n}\nconst mapDispatchToProps = {\n    changeFilterType,\n    changeSortType,\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookSearchSettingsContainer);\n","import BookSearchSettings from './book-search-settings-container'\nexport default BookSearchSettings;\n","import BookList from \"../ui/book-list\";\nimport BookSearchSettings from \"../ui/book-search-settings\";\n\nconst HomePage = () => {\n    return (\n        <>\n            <BookSearchSettings/>\n            <BookList/>\n        </>\n    )\n}\nexport default HomePage;\n","import {withIndicator} from \"../../hoc\";\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\nimport {FC} from \"react\";\nimport {Book} from \"../../../services/book-storage/types\";\n\ntype BookDetailProps = {\n    selectedBook: Book\n}\n\nconst BookDetail: FC<BookDetailProps> = (props) => {\n    const {\n        selectedBook: {\n            title, description, publishedDate, authors, categories,\n            imageLinks, pageCount, language\n        }\n    } = props\n\n    const languageLabel = language === 'en' ? 'английский' : 'русский';\n    const descriptionLabel = description?.replaceAll(/<\\/?[^>]+>/g, '') || 'Описание отсутствует';\n    const categoryLabel = categories?.map(category => <p key={category}>{category}</p>) || 'нет категорий';\n    const dateLabel = publishedDate?.split('-').reverse().join('.') || 'нет даты';\n    const authorLabel = authors?.map(author => {\n        return <span className=\"badge rounded-pill bg-info m-1 fs-5 text-wrap\">{author}</span>\n    }) || 'нет автора';\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-4\">\n                <img className=\"img-thumbnail mb-3\" alt={title} src={imageLinks?.medium}/>\n            </div>\n            <div className=\"col-sm-8\">\n                <h2 className=\"bg-primary p-3 text-white\">{title}</h2>\n                <p>{authorLabel}</p>\n                <p className='border p-3'>{descriptionLabel}</p>\n                <h3 className='bg-secondary text-white text-center text-sm-start p-2'>Детализация</h3>\n                <dl className=\"row text-center text-sm-start\">\n                    <dt className=\"col-sm-3 text-uppercase fs-5\">Дата публикации</dt>\n                    <dd className=\"col-sm-9\">{dateLabel}&nbsp;г.</dd>\n                    <dt className=\"col-sm-3 text-uppercase fs-5\">Язык книги:</dt>\n                    <dd className=\"col-sm-9\">{languageLabel}</dd>\n                    <dt className=\"col-sm-3 text-uppercase fs-5\">Всего страниц:</dt>\n                    <dd className=\"col-sm-9\">{pageCount}</dd>\n                    <dt className=\"col-sm-3 text-uppercase fs-5\">Категории</dt>\n                    <dd className=\"col-sm-9\">{categoryLabel}</dd>\n                </dl>\n            </div>\n        </div>\n    )\n}\nexport default withIndicator(Spinner, ErrorIndicator)(BookDetail);\n","import BookDetail from \"./book-detail-container\";\nexport default BookDetail;\n","import {compose} from \"redux\";\nimport BookDetail from \"./book-detail\";\nimport {withBookStorage} from \"../../hoc\";\nimport {connect} from \"react-redux\";\nimport {FC, useEffect} from \"react\";\nimport {DispatchThunkType, OwnProps, ThunkType} from \"../../../store/reducers/book-list/types\";\nimport {RootStateType} from \"../../../store/reducers\";\nimport {fetchBook} from \"../../../store/reducers/book-list/book-list-actions\";\nimport {Book} from \"../../../services/book-storage/types\";\n\ntype BookDetailContainerProps = {\n    id: string,\n    fetchBook(id: string): ThunkType,\n    selectedBook: Book,\n}\nconst BookDetailContainer: FC<BookDetailContainerProps> = (props) => {\n    const {id, fetchBook, selectedBook, ...args} = props\n    useEffect(() => {\n        fetchBook(id);\n    }, [fetchBook, id])\n    return selectedBook && <BookDetail selectedBook={selectedBook} {...args}/>\n\n}\n\nconst mapStateToProps = ({bookList: {selectedBook, loading, error}}: RootStateType) => ({\n    selectedBook, loading, error\n})\nconst mapDispatchToProps = (dispatch: DispatchThunkType, {bookStorage}: OwnProps) => ({\n    fetchBook: (id: string) => dispatch(fetchBook(bookStorage)(id))\n})\n\nexport default compose(\n    withBookStorage(),\n    connect(mapStateToProps, mapDispatchToProps),\n)(BookDetailContainer) as any\n","import BookDetail from \"../ui/book-detail\";\nimport {useParams} from \"react-router-dom\";\n\ntype BookParams ={\n    id : string\n}\n\nconst BookPage =()=>{\n    const {id} = useParams<BookParams>();\n    return <BookDetail id={id}/>\n}\n\nexport default BookPage;\n\n\n\n\n","const AboutPage = () => {\n    return (\n        <div className='text-center my-5'>\n            <div className='mb-4 fs-3'>\n                Применил полученые знания о React Redux Typescript из следующих источников:\n            </div>\n            <div className='row'>\n                <div className='col-sm-6 p-2'>\n                    <div className='mb-2 text-uppercase text-danger'>Текстовый материал:</div>\n                    <ul className='list-unstyled'>\n                        <li><a className='text-info' href=\"https://ru.reactjs.org/\">ReactJS</a></li>\n                        <li><a className='text-info' href=\"https://github.com/rajdee/redux-in-russian\">Redux</a>\n                        </li>\n                        <li><a className='text-info' href=\"https://www.typescriptlang.org/docs/\">Typescript</a></li>\n                    </ul>\n                </div>\n                <div className='col-sm-6 p-2'>\n                    <div className='mb-2 text-uppercase text-danger'>Видеоматериал:</div>\n                    <ul className='list-unstyled'>\n                        <li><a className='text-info' href=\"https://www.udemy.com/course/pro-react-redux/\">\n                            Юрий Бура, React + Redux. Практическая разработка коммерческих React приложений\n                        </a></li>\n                        <li><a className='text-info' href=\"https://www.udemy.com/course/react-2020-complete-guide/\">\n                            Владилен Минин, React JS. Практический курс 2020 (вкл. Хуки, Классы, Redux)\n                        </a></li>\n                        <li><a className='text-info'\n                               href=\"https://www.youtube.com/playlist?list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8\">\n                            ReactJS - Путь самурая (Redux Thunk Saga)\n                        </a></li>\n                    </ul>\n                </div>\n                <div className='col-sm-6 p-2'>\n                    <div className='mb-2 text-uppercase text-danger'>Реализовано:</div>\n                    <ul className='list-unstyled'>\n                        <li>Поиск, фильтрация, сортировка книг</li>\n                        <li>Динамическая пагинация</li>\n                        <li>Обработка загрузки и ошибок</li>\n                        <li>Работа с API</li>\n                        <li>Динамический роутинг по карточкам</li>\n                        <li>Адаптив</li>\n                        <li>Оптимизация компонентов</li>\n                    </ul>\n                </div>\n                <div className='col-sm-6 p-2'>\n                    <div className='mb-2 text-uppercase text-danger'>Затронутые темы:</div>\n                    <ul className='list-unstyled'>\n                        <li>Глобальное хранилище</li>\n                        <li>Роутинг</li>\n                        <li>Условный рендеринг</li>\n                        <li>Референсы</li>\n                        <li>Хуки</li>\n                        <li>Компоненты высшего порядка</li>\n                        <li>Средства отладки кода redux-dev-tools</li>\n                        <li>Bootstrap 5</li>\n                        <li>Регулярные выражения</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AboutPage;\n","import {ChangeEvent, FC, FormEvent, useEffect, useRef} from \"react\";\nimport {useHistory} from 'react-router-dom';\n\ntype SearchPanelType = {\n    query: string,\n    changeSearchQuery(query: string): void,\n    fetchBooks(): void,\n}\n\nconst SearchPanel: FC<SearchPanelType> = ({query, changeSearchQuery, fetchBooks}) => {\n    const history = useHistory();\n    const findBooksByQuery = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (history.location.pathname !== '/') {\n            history.push('/');\n        }\n        fetchBooks();\n    };\n    const inputRef = useRef<HTMLInputElement>(null);\n    useEffect(() => {\n        inputRef!.current!.focus();\n    }, [])\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => changeSearchQuery(e.target.value);\n\n\n    return (\n        <form className=\"d-flex mw-100\" onSubmit={findBooksByQuery}>\n            <input className=\"form-control me-2\" type=\"text\" placeholder=\"Введите запрос\"\n                   value={query}\n                   onChange={inputHandler}\n                   ref={inputRef}\n            />\n            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Поиск</button>\n        </form>\n    )\n}\n\nexport default SearchPanel;\n\n\n\n","import SearchPanelContainer from \"./search-panel-container\";\nexport default  SearchPanelContainer;\n","import SearchPanel from \"./search-panel\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {RootStateType} from \"../../../store/reducers\";\nimport {withBookStorage} from \"../../hoc\";\nimport {changeSearchQuery, fetchBooks} from \"../../../store/reducers/book-list/book-list-actions\";\nimport {BookStorageType} from \"../../../services/book-storage/types\";\nimport {DispatchThunkType} from \"../../../store/reducers/book-list/types\";\n\n//TODO props : ?\nconst SearchPanelContainer = (props: any) => {\n    return <SearchPanel {...props} />\n}\nconst mapStateToProps = (state: RootStateType) => ({\n    query: state.bookList.query\n});\n// TODO ownProps : ?\nconst mapDispatchToProps = (dispatch: DispatchThunkType, ownProps: any) => {\n    const bookStorage: BookStorageType = ownProps.bookStorage;\n\n    return {\n        changeSearchQuery: (query: string) => dispatch(changeSearchQuery(query)),\n        fetchBooks: () => dispatch(fetchBooks(bookStorage)),\n    }\n}\n\nexport default compose(\n    withBookStorage(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(SearchPanelContainer) as React.ComponentType;\n\n\n","import SearchPanel from \"../search-panel\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary mt-1 mb-3\">\n            <div className=\"container-fluid\">\n                <NavLink className=\"navbar-brand fs-1\" to='/'>BookStorage</NavLink>\n                <button className=\"navbar-toggler collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n                <div className=\"navbar-collapse collapse\" id=\"navbarColor01\">\n                    <ul className=\"navbar-nav me-auto\">\n                        <li className=\"nav-item\">\n                            <NavLink to='/about' className=\"nav-link fs-5\">\n                                О проекте\n                                <span className=\"visually-hidden\">(current)</span>\n                            </NavLink>\n                        </li>\n                    </ul>\n                    <SearchPanel/>\n                </div>\n            </div>\n        </nav>\n    )\n}\nexport default Header;\n","import App from './app';\nexport default App;\n","import {Redirect, Route, Switch} from 'react-router-dom'\nimport {AboutPage, BookPage, HomePage} from \"../../pages\";\nimport Header from \"../header/header\";\n\nconst App = () => {\n    return (\n        <div className='container-xxl'>\n            <Header/>\n            <Switch>\n                <Route exact path='/' component={HomePage} />\n                <Route path='/card/:id' component={BookPage} />\n                <Route path='/about' component={AboutPage}/>\n                <Redirect to='/'/>\n            </Switch>\n        </div>\n    )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport store from './store/store'\nimport ErrorBoundary from \"./components/ui/error-boundary\";\nimport App from \"./components/ui/app\";\nimport BookStorage from \"./services/book-storage\";\nimport BookStorageContext from \"./context/book-storage\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport \"bootswatch/dist/sketchy/bootstrap.min.css\";\n\n\nconst bookStorage = new BookStorage();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ErrorBoundary>\n                <BookStorageContext.Provider value={bookStorage}>\n                    <Router>\n                        <App/>\n                    </Router>\n                </BookStorageContext.Provider>\n            </ErrorBoundary>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}